<?php
session_start();
$_SESSION['userName'] = 'admin';
require_once 'app/autoloader.php';
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Список товаров</title>
    <meta charset="utf-8">
</head>
<body style="width: 700px; margin: 100px auto;">
    <h1>Пространства имен, перегрузка и встроенные интерфейсы и классы</h1>
    <h3>1) Распишите свое понимание пространства имен. (Представьте, что вас спрашивают на собеседовании).</h3>
    <p><strong>Пространство имён(namespace) </strong> - это некоторое хранилище, созданное для абстрактной группировки уникальных идентификаторов(имён).PHP не позволяет использовать два класса с одинаковым названием. Они должны быть уникальны. Представьте себе, вы используете какую-либо стороннюю библиотеку, в которой присутствует класс User. Это означает, что свой собственный класс с таким же названием вы уже не сможете использовать. Что не совсем нам подходит, ведь название для класса очень даже удобное. Пространства имен в PHP помогают обойти это ограничение, более того, мы можем создать сколько угодно классов с одним названием. Также они позволяют группировать вместе логически связанные участки кода.</p>
    <h3>2) Распишите свое понимание исключений (Exception) и зачем они нужны. (Представьте, что вас спрашивают на собеседовании).</h3>
    <p><strong>Исключение</strong>  — это объект встроенного в PHP класса Exception или его наследника. Объект исключения содержит подробности о причинах ошибки.Исключение выбрасывается в случае возникновения нештатной ситуации, когда функция обнаруживает что не способна выполнить свою задачу.Выброс исключения чем-то похож на возврат значения через return, однако в отличие от return, выброс исключения выходит не только из функции где оно выброшено, но и всех вышестоящих функций, которые ее вызвали, если они не ловят это исключение. Поскольку исключение сигнализирует о внештатной ситуации, которую не исправить, исключения обычно не ловят и позволяют им завершить выполнение программы.</p>
    <hr>
<form  action='cart.php' method='POST'>
    <table border="1px" width="700px">
            <tr>
                <th>Товар</th>
                <th>В корзину</th>
            </tr>
        <?php  
        $list[] = new classes\Phone\Phone(8900, 'Lenovo P2', 'Стильный Octa-Core смартфон с отличной камерой', 250, '4G', 'Глобальная');
        $list[] = new classes\Phone\Phone(2400, 'Motorola C380', 'Проверенный телефон из 00-х, до сих пор рабочий', 250, '3G', 'Локальная');
        $list[] = new classes\Notebook\Notebook(34000, 'Aser Prime 10', 'Мощьный ноутбук 15"6 дюйма Intel Core i5 Kaby Lake' , 250, 8000, 'WINDOWS 7');
        $list[] = new classes\Notebook\Notebook(65200, 'Dell Alienware', 'Игроаой ноутбук 20"7 дюйма Intel Core i7 Kaby Lake 16GB SSD', 250, 11000, 'WINDOWS 10');
        $list[] = new classes\Tablet\Tablet(9900, 'Asus One 10', 'Планшет с 4 GB оперативной памяти, безрамочный', 250, '9"', 'Есть');
        $list[] = new classes\Tablet\Tablet(7300, 'Doogee X230', 'Планшет с 2 GB оперативной памяти, c OS Ubuntu Mobile', 250, '11"', 'Нет');

        foreach ($list as $key => $value) 
        {
            $item[] = serialize($value);
            echo "<tr><td>" . $value->getInfoProduct() . "</td>";
            echo '<td><input type="checkbox" name="cart[]" value=' . $key . '></td></tr>';
        }
        $_SESSION['productList'] = $item;
        ?>
    </table>
    <input type="submit" value="В корзину">
</form>
</body>
</html>
